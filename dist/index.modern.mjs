import{mplTokenMetadata as e,fetchAllDigitalAssetByOwner as t}from"@metaplex-foundation/mpl-token-metadata";import{publicKey as n}from"@metaplex-foundation/umi";import{createUmi as r}from"@metaplex-foundation/umi-bundle-defaults";import a from"isomorphic-unfetch";import{Wallet as o}from"@coral-xyz/anchor";import{Transaction as i,ComputeBudgetProgram as s,TransactionMessage as l,Keypair as c}from"@solana/web3.js";async function m(o,i,s,l=!0){if(!o)return new Error("Address is required");const c=function(e){return e.length>44||e.length<32?{error:!0,message:"Invalid public key length"}:(e=>/^[A-HJ-NP-Za-km-z1-9]*$/.test(e))(e)?{error:!1,message:"Valid public key"}:{error:!0,message:"Non base58 characters in public key"}}(o);if(c.error)return new Error(c.message);if(l&&"mainnet"===s)return await async function(e,t,n=!1){try{let r=1,o=[];for(;r;){const i=await a(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",id:1,method:"getAssetsByOwner",params:{ownerAddress:e,page:r,limit:100,options:{showUnverfifiedCollections:!n}}})}),s=await i.json();o.push(...s.result.items),1e3!==s.result.total?r=!1:r++}return o}catch(e){return console.error(e),new Error("Error fetching assets")}}(o,i);if(l&&"mainnet"!==s)return new Error("DAS is only available on mainnet");const m=i||"mainnet"===s?"https://api.mainnet-beta.solana.com":"devnet"===s?"https://api.devnet.solana.com":"testnet"===s?"https://api.testnet.solana.com":"localhost"===s?"http://localhost:8899":"https://api.mainnet-beta.solana.com",u=await async function(a,o){try{const i=r(o).use(e());return await t(i,n(a))}catch(e){return console.error(e),new Error("Error fetching assets")}}(o,m);return u}async function u(e,t,n,r=2e-5){let a;e instanceof i?(e.feePayer=n,a=await t.simulateTransaction(e)):a=await t.simulateTransaction(e);const o=a.value.unitsConsumed+500,c=Math.floor(r/o*10**9)*10**6;console.log("Expected fee: ",o*(c/10**6)/10**9," SOL");const m=[s.setComputeUnitLimit({units:o}),s.setComputeUnitPrice({microLamports:c})];if(e instanceof i)e.add(...m);else{const t=l.decompile(e.message);t.instructions.unshift(...m),e.message=t.compileToV0Message()}return e}async function f(e,t,n,r){const a=await Promise.all(t.map(async t=>{const a=n instanceof c?new o(n):n;if(t instanceof i){t.recentBlockhash=r,t.feePayer=a.publicKey;const n=await a.signTransaction(t);return await e.sendRawTransaction(n.serialize(),{skipPreflight:!0,preflightCommitment:"confirmed"})}{t.message.recentBlockhash=r;const n=await a.signTransaction(t);return await e.sendRawTransaction(n.serialize(),{skipPreflight:!0,preflightCommitment:"confirmed"})}}));let s=[],l=!1,m=0;for(;!l;){await d(5e3);const t=await e.getSignatureStatuses(a);console.log(t);const n=null==t?void 0:t.value;if(m>10)for(let e=0;e<n.length;e++){const t=n[e];s.push(null===t?{signature:a[e],error:!0,message:"Transaction dropped"}:null!==(null==t?void 0:t.err)?{signature:a[e],error:!0,message:"Transaction failed"}:"finalized"===(null==t?void 0:t.confirmationStatus)||"confirmed"===(null==t?void 0:t.confirmationStatus)?{signature:a[e],error:!1,message:"Transaction confirmed"}:{signature:a[e],error:!0,message:"Could not confirm transaction"}),l=!0;break}if(n.filter(e=>"confirmed"===(null==e?void 0:e.confirmationStatus)||"finalized"===(null==e?void 0:e.confirmationStatus)).length===n.length)l=!0,s.push(...n.map((e,t)=>({signature:a[t],error:!1,message:"Transaction confirmed"})));else if(n.filter(e=>null===e).length>0&&m<8);else{for(let e=0;e<n.length;e++){const t=n[e];s.push(null===t?{signature:a[e],error:!0,message:"Transaction dropped"}:null!==(null==t?void 0:t.err)?{signature:a[e],error:!0,message:"Transaction failed"}:"finalized"===(null==t?void 0:t.confirmationStatus)||"confirmed"===(null==t?void 0:t.confirmationStatus)?{signature:a[e],error:!1,message:"Transaction confirmed"}:{signature:a[e],error:!0,message:"Could not confirm transaction"})}l=!0}m++}return s}const d=async e=>new Promise(t=>setTimeout(t,e));async function p(e,t,n,r){for(let a of t)a=await u(a,n,e.publicKey,r||2e-5);const a=await n.getLatestBlockhash();return await f(n,t,e,a.blockhash)}export{u as addComputeAndPriority,m as getAssetsForWallet,p as sendAndConfirmAllSmartTransactions,f as sendAndConfirmTransactions};
